{
    "componentChunkName": "component---src-templates-docs-js",
    "path": "/suunnittelu",
    "result": {"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Tietokantojen suunnittelua\",\n  \"nav_order\": 7,\n  \"hidden\": false\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"suunnittelun-periaatteet\"\n  }, \"Suunnittelun periaatteet\"), mdx(\"p\", null, \"Tietokannan suunnittelussa meid\\xE4n tulee p\\xE4\\xE4tt\\xE4\\xE4 tietokannan rakenne: mit\\xE4 tauluja tietokannassa on sek\\xE4 mit\\xE4 sarakkeita kussakin taulussa on. T\\xE4h\\xE4n on sin\\xE4ns\\xE4 suuri m\\xE4\\xE4r\\xE4 mahdollisuuksia, mutta tuntemalla muutaman periaatteen p\\xE4\\xE4see pitk\\xE4lle.\"), mdx(\"p\", null, \"Hyv\\xE4 tavoite suunnittelussa on, ett\\xE4 tuloksena olevaa tietokantaa on mukavaa k\\xE4ytt\\xE4\\xE4 SQL-kielen avulla. Tietokannan rakenteen tulisi olla sellainen, ett\\xE4 pystymme hakemaan ja muuttamaan tietoa n\\xE4pp\\xE4r\\xE4sti SQL-komennoilla.\"), mdx(\"p\", null, \"T\\xE4ss\\xE4 ovat nelj\\xE4 tietokannan sunnittelun periaatetta:\"), mdx(\"h2\", {\n    \"id\": \"periaate-1\"\n  }, \"Periaate 1\"), mdx(\"p\", null, \"Taulut ja niiden sarakkeet ovat kiinteit\\xE4, ja tietokannan k\\xE4ytt\\xE4j\\xE4 tekee muutoksia vain riveihin. Kaikki samanlaista tietoa sis\\xE4lt\\xE4v\\xE4t rivit ovat samassa taulussa.\"), mdx(\"h2\", {\n    \"id\": \"periaate-2\"\n  }, \"Periaate 2\"), mdx(\"p\", null, \"Jokainen sarake sis\\xE4lt\\xE4\\xE4 yksitt\\xE4ist\\xE4 dataa, kuten kokonaisluvun tai teksti\\xE4, mutta ei listaa asioista. Lista talletetaan omaksi taululukseen siten, ett\\xE4 jokainen elementti on oma rivins\\xE4.\"), mdx(\"h2\", {\n    \"id\": \"periaate-3\"\n  }, \"Periaate 3\"), mdx(\"p\", null, \"Jokainen tietue on tietokannassa tasan kerran. Muualla t\\xE4h\\xE4n tietoon viitataan p\\xE4\\xE4avaimella.\"), mdx(\"h2\", {\n    \"id\": \"periaate-4\"\n  }, \"Periaate 4\"), mdx(\"p\", null, \"Tietokanta ei sis\\xE4ll\\xE4 tietoa, joka voidaan laskea tai p\\xE4\\xE4tell\\xE4 muusta tietokannan sis\\xE4ll\\xF6st\\xE4.\"), mdx(\"h2\", {\n    \"id\": \"esimerkki\"\n  }, \"Esimerkki\"), mdx(\"p\", null, \"Tarkastellaan tilannetta, jossa verkkosivulla on k\\xE4ytt\\xE4ji\\xE4 ja jokaisella k\\xE4ytt\\xE4j\\xE4ll\\xE4 on lista yst\\xE4vi\\xE4. T\\xE4ss\\xE4 n\\xE4emme melko huonosti suunnitellun taulun \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Users\"), \", joka sis\\xE4lt\\xE4\\xE4 tietoa k\\xE4ytt\\xE4jist\\xE4 ja heid\\xE4n yst\\xE4vist\\xE4\\xE4n:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"id          username    friends       total\\n----------  ----------  ------------  ----------\\n1           uolevi      maija,liisa   2\\n2           maija       aapeli        1\\n3           liisa                     0\\n4           aapeli      uolevi,maija  2\\n\")), mdx(\"p\", null, \"Ajatuksena t\\xE4ss\\xE4 taulussa on, ett\\xE4 sarake \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"friends\"), \" sis\\xE4lt\\xE4\\xE4 listan yst\\xE4vist\\xE4 tekstin\\xE4, jossa yst\\xE4vien k\\xE4ytt\\xE4j\\xE4tunnukset (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"username\"), \") ovat eroteltu pilkuin. Lis\\xE4ksi, sarakkeessa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"total\"), \" on annettu yst\\xE4vien kokonaism\\xE4\\xE4r\\xE4.\"), mdx(\"p\", null, \"T\\xE4ll\\xE4 rakenteella rikomme periaatteita 2-4, mutta nyt meill\\xE4 on mahdollisuus parantaa tietokantaa ja pohtia, mihin periaatteet pohjautuvat.\"), mdx(\"h2\", {\n    \"id\": \"parannus-1\"\n  }, \"Parannus 1\"), mdx(\"p\", null, \"Tietokanta rikkoo periaatetta 2, sill\\xE4 sarake \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"friends\"), \" sis\\xE4lt\\xE4\\xE4 listan yst\\xE4vist\\xE4. Ongelmana t\\xE4ss\\xE4 sarakkeessa on, ett\\xE4 sit\\xE4 on hankala k\\xE4sitell\\xE4 SQL-komennoilla. Esimerkiksi miten saamme selville, ketk\\xE4 kaikki ovat lis\\xE4nneet Maijan yst\\xE4v\\xE4kseen?\"), mdx(\"p\", null, \"Ratkaisuna on poistaa sarake \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"friends\"), \" ja luodaan uusi taulu \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Friends\"), \", jossa jokainen rivi on yst\\xE4vyyssuhde muorossa \\\"\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"k\\xE4ytt\\xE4j\\xE4ll\\xE4 X on k\\xE4ytt\\xE4j\\xE4 Y kaverilistallaan\"), \"\\\":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"user        friend\\n----------  ----------\\nuolevi      maija\\nuolevi      liisa\\nmaija       aapeli\\naapeli      uolevi\\naapeli      maija\\n\")), mdx(\"p\", null, \"Nyt taulu \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Users\"), \" n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"id          username      total\\n----------  ----------  ----------\\n1           uolevi      2\\n2           maija       1\\n3           liisa       0\\n4           aapeli      2\\n\")), mdx(\"p\", null, \"Nyt voimme helposti ratkaista, keiden listoilla Maija on:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT user FROM Friends WHERE friend='maija';\\n\")), mdx(\"h2\", {\n    \"id\": \"parannus-2\"\n  }, \"Parannus 2\"), mdx(\"p\", null, \"Uusi taulu \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Friends\"), \" on hyv\\xE4, mutta se rikkoo periaatetta 3, sill\\xE4 k\\xE4ytt\\xE4j\\xE4nimet ovat nyt useassa paikassa. Ongelmana on, ett\\xE4 k\\xE4ytt\\xE4j\\xE4nimen muuttuessa, joudume etsim\\xE4\\xE4n kaikki paikat jossa k\\xE4ytt\\xE4j\\xE4nime\\xE4 on k\\xE4ytetty.\"), mdx(\"p\", null, \"Ratkaisuna on muuttaa taulu \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Friends\"), \" k\\xE4ytt\\xE4m\\xE4\\xE4n viitteit\\xE4. Nyt taulu n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"user_id      friend_id\\n-----------  ----------\\n1            2\\n1            3\\n2            4\\n4            1\\n4            2\\n\")), mdx(\"p\", null, \"Huomaa, t\\xE4m\\xE4n my\\xF6t\\xE4 on hankalampaa l\\xF6yt\\xE4\\xE4 keiden listoilla Maija on, koska joudumme hakemaan k\\xE4ytt\\xE4j\\xE4nimet taulusta \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Users\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT A.username\\nFROM Users A, Users B, Friends K\\nWHERE A.id = K.user_id AND B.id = K.friend_id AND B.username = 'maija';\\n\")), mdx(\"p\", null, \"T\\xE4st\\xE4 huolimatta muutos on j\\xE4rkev\\xE4, sill\\xE4 k\\xE4ytt\\xE4j\\xE4nimi\\xE4 k\\xE4ytet\\xE4\\xE4n nyt vain kerran, taulussa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Users\"), \".\"), mdx(\"h2\", {\n    \"id\": \"parannus-3\"\n  }, \"Parannus 3\"), mdx(\"p\", null, \"Tietokanta rikkoo edelleen periaatetta 4, sill\\xE4 sarake \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"total\"), \" pystyt\\xE4\\xE4n laskemaan taulusta \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Friends\"), \". Se on oikein n\\xE4pp\\xE4r\\xE4 sarake, sill\\xE4 t\\xE4ll\\xE4 hetkell\\xE4 voimme esimerkiksi hakea Uolevin yst\\xE4v\\xE4t seuraavasti:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT total FROM Users WHERE username='uolevi';\\n\")), mdx(\"p\", null, \"Ongelmana tosin on, ett\\xE4 joka kerta yst\\xE4vien muuttuessa, meid\\xE4n pit\\xE4isi p\\xE4ivitt\\xE4\\xE4 my\\xF6s saraketta \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"total\"), \". Parempi ratkaisu on poistaa koko sarake taulusta:le:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"id          username    \\n----------  ----------\\n1           uolevi    \\n2           maija     \\n3           liisa     \\n4           aapeli    \\n\")), mdx(\"p\", null, \"Vaikka saraketta ei en\\xE4\\xE4 ole, voimme silti laskea yst\\xE4vien m\\xE4\\xE4r\\xE4n t\\xE4ten:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"SELECT COUNT(*)\\nFROM Users A, Friends K\\nWHERE A.username='uolevi' AND k.user = A.id;\\n\")), mdx(\"h1\", {\n    \"id\": \"normalisointi-normalization\"\n  }, \"Normalisointi (Normalization)\"), mdx(\"p\", null, \"Tietokannan teoriassa puhutaan usein termist\\xE4 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"normalisointi (normalization)\"), \", jonka avulla tietokannan rakennetta parannetaan. T\\xE4m\\xE4 tapahtuu muuttamalla tietokannan rakennetta siten, ett\\xE4 se vastaa tiettyj\\xE4 \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"normaalimuotoja (normal forms\"), \".\"), mdx(\"p\", null, \"K\\xE4yt\\xE4nn\\xF6ss\\xE4, normalisointi johtaa samoihin tuloksiin kuin yll\\xE4 olevat periaatteet, mutta normaalimuotojen vaatimukset ovat hieman tulkinnanvaraiset. Jos haluat k\\xE4ytt\\xE4\\xE4 hieman aikaa tietokantojen teoriaan, kannattaa tutustua tarkemmin normaalimuotoihin. Muutoin yll\\xE4 olevat periaatteet ovat melkoisen riitt\\xE4v\\xE4t.\"), mdx(\"h1\", {\n    \"id\": \"tiedon-kuvailu\"\n  }, \"Tiedon kuvailu\"), mdx(\"p\", null, \"Seuraavaksi k\\xE4sittelemme kaksi tapaa kuvailla tietokannan rakennetta. Graafinen kuvaus n\\xE4ytt\\xE4\\xE4 tietokannan taulut, sarakkeet ja viitteet niiden v\\xE4lill\\xE4, kun taas SQL-skeema n\\xE4ytt\\xE4\\xE4 tietokannan luomiseen k\\xE4ytetyt SQL-komennot.\"), mdx(\"h2\", {\n    \"id\": \"tietokantakaavio-database-diagram\"\n  }, \"Tietokantakaavio (Database diagram)\"), mdx(\"p\", null, \"Tietokantakaavio on graafinen esitys tietokannasta, jossa jokainen taulu on laatikko joka sis\\xE4lt\\xE4\\xE4 taulun nimen ja sarakkeet listana. Viittaukset rivien v\\xE4lill\\xE4 n\\xE4ytet\\xE4\\xE4n yhteyksin\\xE4 laatikoiden v\\xE4lill\\xE4.\"), mdx(\"p\", null, \"Tietokantakaavion piirt\\xE4miseen on monia v\\xE4h\\xE4n erilaisia tapoja. Seuraava kaavio on luotu netiss\\xE4 olevalla ty\\xF6kalulla \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dbdiagram.io/d\"\n  }, \"https://dbdiagram.io/\"), \":\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"https://raw.githubusercontent.com/centria/tietokannat/master/src/images/diagram_new.png\",\n    \"alt\": \"Database diagram of a simple three table Database\"\n  }), \" \"), mdx(\"p\", null, \"T\\xE4ss\\xE4 merkki \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1\"), \" tarkoittaa, ett\\xE4 sarakkeessa on eri arvo joka rivill\\xE4, ja merkki \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"*\"), \" puolestaan tarkoittaa, ett\\xE4 sarakkeessa voi olla sama arvo usealla rivill\\xE4. Esimerkiksi taulussa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Products\"), \" jokaisella rivill\\xE4 on eri \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"id\"), \", mutta taulussa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Purchases\"), \" usealla rivill\\xE4 voi olla sama \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"product_id\"), \".\"), mdx(\"h2\", {\n    \"id\": \"sql-skeema-sql-schema\"\n  }, \"SQL-skeema (SQL schema)\"), mdx(\"p\", null, \"SQL-skeema on tekstiesitys tietokannasta, joka antaa komennot joita tarvittiin tietokannan luomiseen. Hyv\\xE4 puoli t\\xE4ss\\xE4 esitysmuodossa on, ett\\xE4 se on ehdottoman tarkka, ja voimme luoda tietokannan uudelleen niin halutessamme.\"), mdx(\"p\", null, \"Esimerkiksi yll\\xE4 olevan tietokannan skeema olisi seuraava:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"CREATE TABLE Products (id INTEGER PRIMARY KEY, name TEXT, price INTEGER);\\nCREATE TABLE Customers (id INTEGER PRIMARY KEY, name TEXT);\\nCREATE TABLE Purchases (product_id INTEGER, customer_id INTEGER);\\n\")), mdx(\"p\", null, \"Oletetaan t\\xE4m\\xE4n skeeman olevan tiedostossa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"depiction.sql\"), \". Voimme luoda tietokannan SQLite-tulkilla komennolla \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".read\"), \": \"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sqlite> .read depiction.sql\\nsqlite> .tables\\nCustomers  Purchases   Products\\n\")), mdx(\"p\", null, \"Toisaalta voimme my\\xF6s k\\xE4ytt\\xE4\\xE4 komentoa \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".schema\"), \" SQLite-tulkissa, joka palauttaa t\\xE4m\\xE4nhetkisen skeeman:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"sqlite> .schema\\nCREATE TABLE Products (id INTEGER PRIMARY KEY, name TEXT, price INTEGER);\\nCREATE TABLE Customers (id INTEGER PRIMARY KEY, name TEXT);\\nCREATE TABLE Purchases (product_id INTEGER, customer_id INTEGER);\\n\")), mdx(\"h1\", {\n    \"id\": \"tietokannan-muuttaminen\"\n  }, \"Tietokannan muuttaminen\"), mdx(\"p\", null, \"K\\xE4yt\\xE4nn\\xF6ss\\xE4 on ep\\xE4tavallista ett\\xE4 tietokanta suunnitellaan ensin, ja ett\\xE4 se pysyisi muuttumattomana maailmanloppuun asti. On paljon yleisemp\\xE4\\xE4, ett\\xE4 tietokannan rakenne muuttuu silloin t\\xE4ll\\xF6in.\"), mdx(\"h2\", {\n    \"id\": \"muutosten-tekeminen\"\n  }, \"Muutosten tekeminen\"), mdx(\"p\", null, \"Yksinkertainen muutos on uuden taulun lis\\xE4\\xE4minen tietokantaan. T\\xE4ss\\xE4 tapauksessa voimme lis\\xE4t\\xE4 taulun komennolla \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"CREATE TABLE\"), \" kuten tavallisesti.\"), mdx(\"p\", null, \"Voimme my\\xF6s muokata olemassaolevan taulun rakennetta komennolla \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ALTER TABLE\"), \". T\\xE4ll\\xE4 komennolla on useita k\\xE4ytt\\xF6tarkoituksia, riippuen siit\\xE4 mit\\xE4 haluamme tehd\\xE4. Voimme esimerkiksi lis\\xE4t\\xE4 sarakkeen komennolla \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ADD COLUMN\"), \".\"), mdx(\"p\", null, \"Tarkastellaan taulua \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Customers\"), \":\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"id           name\\n-----------  ----------\\n1            Uolevi\\n2            Maija\\n3            Aapeli\\n\")), mdx(\"p\", null, \"Kun haluamme lis\\xE4t\\xE4 uuden sarakkeen \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"address\"), \", voimme ajaa seuraavan komennon:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-sql\"\n  }, \"ALTER TABLE Customers ADD COLUMN address TEXT;\\n\")), mdx(\"p\", null, \"T\\xE4m\\xE4n seurauksena taulumme n\\xE4ytt\\xE4\\xE4 t\\xE4lt\\xE4:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"id           name        address\\n-----------  ----------  ----------\\n1            Uolevi\\n2            Maija\\n3            Aapeli\\n\")), mdx(\"p\", null, \"Koska lis\\xE4simme uuden sarakkeen, olemassaolevilla riveill\\xE4 ei ole tietoa siin\\xE4 sarakkeessa. Tietoa voidaan p\\xE4ivitt\\xE4\\xE4 t\\xE4m\\xE4n j\\xE4lkeen komennolla \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"UPDATE\"), \".\"), mdx(\"p\", null, \"Komennon \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ALTER TABLE\"), \" k\\xE4ytt\\xF6 riippuu tietokantaj\\xE4rjestelm\\xE4st\\xE4, ja j\\xE4lleen kerran tieto l\\xF6ytyy k\\xE4yt\\xF6ss\\xE4 olevan j\\xE4rjestelm\\xE4n dokumentaatiosta. SQLitess\\xE4 komento on melko rajattu, verrattuna esimerkiksi PostgreSQL:\\xE4\\xE4n.\"), mdx(\"h2\", {\n    \"id\": \"muutoksen-haasteet\"\n  }, \"Muutoksen haasteet\"), mdx(\"p\", null, \"Olemassaolevan tietokannan muutoksissa on yksi ongelma: Tietokannassa on yleens\\xE4 tietoja ja se on k\\xE4yt\\xF6ss\\xE4 jossain sovelluksessa. Kuinka voimme toteuttaa muutokset siten, ett\\xE4 ne eiv\\xE4t vaikuta j\\xE4rjestelm\\xE4n toimivuuteen?\"), mdx(\"p\", null, \"Taulun tai sarakkeen lis\\xE4\\xE4minen ovat yleens\\xE4 melko helppoja muutoksia, sill\\xE4 ne eiv\\xE4t vaikuta tietokannan k\\xE4ytt\\xE4miseen vanhalla tavalla, mutta haastavampia muutoksia ovat esimerkiksi sarakkeen poistaminen tai uudelleenime\\xE4minen.\"), mdx(\"p\", null, \"Yksi hyv\\xE4 periaate on tehd\\xE4 muutokset vaiheittain, askel kerrallaan. Esimerkiksi, jos tarvitsee muuttaa sarakkeen nime\\xE4, voit tehd\\xE4 sen n\\xE4in:\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Lis\\xE4\\xE4 uusi sarake vanhan sarakkeen rinnalle \"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Muuta \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"tietoa kirjoittavat\"), \" SQL-komennot siten, ett\\xE4 ne kirjoittavat sek\\xE4 vanhaan ett\\xE4 uuteen sarakkeeseen.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Kopioi data vanhan sarakkeen riveilt\\xE4 uuden sarakkeen vastaaviin.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Muuta \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"tietoa lukevat\"), \" SQL-komennot siten, ett\\xE4 ne lukevat uudesta sarakkeesta.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Mutta \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"tietoa kirjoittavat\"), \" SQL-komennot siten, ett\\xE4 ne kirjoittavat vain uuteen sarakkeeseen.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Poista vanha sarake taulusta.\")), mdx(\"p\", null, \"T\\xE4ll\\xE4 menetelm\\xE4ll\\xE4 j\\xE4rjestelm\\xE4 pystyy k\\xE4ytt\\xE4m\\xE4\\xE4n tietokantaa koko ajan, ja tietokannan k\\xE4ytt\\xE4j\\xE4t eiv\\xE4t huomaa muutosta. Prosessin lopuksi sarakkeen nimi on muutettu uudeksi.\"), mdx(\"h1\", {\n    \"id\": \"migraatio-migration\"\n  }, \"Migraatio (Migration)\"), mdx(\"p\", null, \"Termi \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"migraatio\"), \" voi tarkoittaa joko tietokannan rakenteen muuttamista tai tietokannan siirt\\xE4mist\\xE4 toiseen sijaintiin. T\\xE4m\\xE4 on valitettavasti kurssimme tavoitteiden ulkopuolella..\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#suunnittelun-periaatteet","title":"Suunnittelun periaatteet","items":[{"url":"#periaate-1","title":"Periaate 1"},{"url":"#periaate-2","title":"Periaate 2"},{"url":"#periaate-3","title":"Periaate 3"},{"url":"#periaate-4","title":"Periaate 4"},{"url":"#esimerkki","title":"Esimerkki"},{"url":"#parannus-1","title":"Parannus 1"},{"url":"#parannus-2","title":"Parannus 2"},{"url":"#parannus-3","title":"Parannus 3"}]},{"url":"#normalisointi-normalization","title":"Normalisointi (Normalization)"},{"url":"#tiedon-kuvailu","title":"Tiedon kuvailu","items":[{"url":"#tietokantakaavio-database-diagram","title":"Tietokantakaavio (Database diagram)"},{"url":"#sql-skeema-sql-schema","title":"SQL-skeema (SQL schema)"}]},{"url":"#tietokannan-muuttaminen","title":"Tietokannan muuttaminen","items":[{"url":"#muutosten-tekeminen","title":"Muutosten tekeminen"},{"url":"#muutoksen-haasteet","title":"Muutoksen haasteet"}]},{"url":"#migraatio-migration","title":"Migraatio (Migration)"}]},"frontmatter":{"title":"Tietokantojen suunnittelua"}}},"pageContext":{"id":"3106f5c2-c33b-50d0-8bbb-27a90908ca6e"}},
    "staticQueryHashes": ["1885717130","1950529541","2744905544","3020054368"]}